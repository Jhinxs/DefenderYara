
rule Trojan_Win32_CrystalDoom_B_dha{
	meta:
		description = "Trojan:Win32/CrystalDoom.B!dha,SIGNATURE_TYPE_PEHSTR_EXT,07 00 07 00 22 00 00 "
		
	strings :
		$a_01_0 = {69 6d 70 6f 72 74 20 54 73 } //1 import Ts
		$a_01_1 = {64 65 66 20 74 73 5f } //1 def ts_
		$a_01_2 = {54 53 5f 63 6e 61 6d 65 73 2e 70 79 } //1 TS_cnames.py
		$a_01_3 = {54 52 49 43 4f 4e } //1 TRICON
		$a_01_4 = {54 72 69 53 74 61 74 69 6f 6e 20 } //1 TriStation 
		$a_01_5 = {20 63 68 61 73 73 69 73 20 } //1  chassis 
		$a_01_6 = {47 65 74 43 70 53 74 61 74 75 73 } //1 GetCpStatus
		$a_01_7 = {69 6d 70 6f 72 74 20 54 73 48 69 } //1 import TsHi
		$a_01_8 = {69 6d 70 6f 72 74 20 54 73 4c 6f 77 } //1 import TsLow
		$a_01_9 = {69 6d 70 6f 72 74 20 54 73 42 61 73 65 } //1 import TsBase
		$a_03_10 = {6d 6f 64 75 6c 65 ?? 76 65 72 73 69 6f 6e } //1
		$a_01_11 = {70 72 6f 67 5f 63 6e 74 } //1 prog_cnt
		$a_01_12 = {54 73 42 61 73 65 2e 70 79 } //1 TsBase.py
		$a_01_13 = {2e 54 73 42 61 73 65 28 } //1 .TsBase(
		$a_01_14 = {54 73 48 69 2e 70 79 } //1 TsHi.py
		$a_01_15 = {6b 65 79 73 74 61 74 65 } //1 keystate
		$a_01_16 = {47 65 74 50 72 6f 6a 65 63 74 49 6e 66 6f } //1 GetProjectInfo
		$a_01_17 = {47 65 74 50 72 6f 67 72 61 6d 54 61 62 6c 65 } //1 GetProgramTable
		$a_01_18 = {53 61 66 65 41 70 70 65 6e 64 50 72 6f 67 72 61 6d 4d 6f 64 } //1 SafeAppendProgramMod
		$a_01_19 = {2e 54 73 48 69 28 } //1 .TsHi(
		$a_01_20 = {54 73 4c 6f 77 2e 70 79 } //1 TsLow.py
		$a_01_21 = {70 72 69 6e 74 5f 6c 61 73 74 5f 65 72 72 6f 72 } //1 print_last_error
		$a_01_22 = {2e 54 73 4c 6f 77 28 } //1 .TsLow(
		$a_01_23 = {20 54 43 4d 20 66 6f 75 6e 64 } //1  TCM found
		$a_01_24 = {43 52 43 31 36 5f 4d 4f 44 42 55 53 } //1 CRC16_MODBUS
		$a_01_25 = {4b 6f 74 6f 76 20 41 6c 61 78 61 6e 64 65 72 } //1 Kotov Alaxander
		$a_01_26 = {43 52 43 5f 43 43 49 54 54 5f 58 4d 4f 44 45 4d } //1 CRC_CCITT_XMODEM
		$a_01_27 = {63 72 63 31 36 72 65 74 } //1 crc16ret
		$a_01_28 = {43 52 43 31 36 5f 43 43 49 54 54 } //1 CRC16_CCITT
		$a_01_29 = {73 68 2e 70 79 63 } //1 sh.pyc
		$a_01_30 = {20 46 41 49 4c 55 52 45 } //1  FAILURE
		$a_01_31 = {73 79 6d 62 6f 6c 20 74 61 62 6c 65 } //1 symbol table
		$a_01_32 = {69 6e 6a 65 63 74 2e 62 69 6e } //1 inject.bin
		$a_01_33 = {69 6d 61 69 6e 2e 62 69 6e } //1 imain.bin
	condition:
		((#a_01_0  & 1)*1+(#a_01_1  & 1)*1+(#a_01_2  & 1)*1+(#a_01_3  & 1)*1+(#a_01_4  & 1)*1+(#a_01_5  & 1)*1+(#a_01_6  & 1)*1+(#a_01_7  & 1)*1+(#a_01_8  & 1)*1+(#a_01_9  & 1)*1+(#a_03_10  & 1)*1+(#a_01_11  & 1)*1+(#a_01_12  & 1)*1+(#a_01_13  & 1)*1+(#a_01_14  & 1)*1+(#a_01_15  & 1)*1+(#a_01_16  & 1)*1+(#a_01_17  & 1)*1+(#a_01_18  & 1)*1+(#a_01_19  & 1)*1+(#a_01_20  & 1)*1+(#a_01_21  & 1)*1+(#a_01_22  & 1)*1+(#a_01_23  & 1)*1+(#a_01_24  & 1)*1+(#a_01_25  & 1)*1+(#a_01_26  & 1)*1+(#a_01_27  & 1)*1+(#a_01_28  & 1)*1+(#a_01_29  & 1)*1+(#a_01_30  & 1)*1+(#a_01_31  & 1)*1+(#a_01_32  & 1)*1+(#a_01_33  & 1)*1) >=7
 
}